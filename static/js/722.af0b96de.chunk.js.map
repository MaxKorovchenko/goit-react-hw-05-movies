{"version":3,"file":"static/js/722.af0b96de.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"item\":\"MoviesList_item__eePYv\",\"image\":\"MoviesList_image__oyOXu\",\"title\":\"MoviesList_title__PB2c8\",\"link\":\"MoviesList_link__8rTGX\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport placeholder from '../../services/images/placeholder.jpg';\n\nimport styles from './MoviesList.module.css';\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n\n  const img_path = 'https://image.tmdb.org/t/p/w500';\n  return (\n    <ul className={styles.list}>\n      {items.map(({ id, title, poster_path }) => (\n        <li className={styles.item} key={id}>\n          <Link\n            className={styles.link}\n            to={`/movies/${id}`}\n            state={{ from: location }}\n          >\n            <img\n              className={styles.image}\n              src={poster_path ? `${img_path}${poster_path}` : placeholder}\n              alt={title}\n              width=\"300\"\n              height=\"450\"\n            />\n            <p className={styles.title}>{title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.defaultProps = {\n  list: [],\n};\n\nMoviesList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"input\":\"SearchForm_input__HOxJo\",\"button\":\"SearchForm_button__UXY06\"};","import PropTypes from 'prop-types';\nimport { FcSearch } from 'react-icons/fc';\n\nimport styles from './SearchForm.module.css';\n\nconst SearchForm = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ query: e.target.search.value });\n    e.target.reset();\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"search movies\"\n        autoComplete=\"off\"\n        required\n      />\n      <button className={styles.button} type=\"submit\">\n        <FcSearch />\n      </button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport Loader from 'components/Loader/Loader';\n\nimport { fetchSerchingMovies } from 'services/api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') return;\n\n    const getSerchingMovies = async () => {\n      try {\n        setIsLoading(true);\n        const { data } = await fetchSerchingMovies(query);\n        setMovies(data.results);\n\n        if (!data.results.length) alert('nothing found ðŸ˜¥');\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getSerchingMovies();\n  }, [query]);\n\n  return (\n    <main>\n      <SearchForm onSubmit={setSearchParams} />\n      {isLoading && <Loader />}\n      {error && <p>Ooooops... something went wrong ðŸ˜¥ {error}</p>}\n      <MoviesList items={movies} />\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6b54f8bf57e01fb03b792219232215b2';\n\nexport const fetchTrendingMovies = async () => {\n  const data = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const fetchSerchingMovies = async query => {\n  const data = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieInfo = async id => {\n  const data = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const data = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const data = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n\n  return data;\n};\n"],"names":["MoviesList","items","location","useLocation","className","styles","map","id","title","poster_path","to","state","from","src","placeholder","alt","width","height","defaultProps","list","onSubmit","e","preventDefault","query","target","search","value","reset","type","name","autoComplete","required","useState","movies","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","getSerchingMovies","fetchSerchingMovies","data","results","length","alert","message","Loader","axios","API_KEY","fetchTrendingMovies","fetchMovieInfo","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}