{"version":3,"file":"static/js/186.d6b3e37c.chunk.js","mappings":"yOAkDA,UA7CgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAoCN,EAAAA,EAAAA,WAAS,GAA7C,eAAOO,EAAP,KAAmBC,EAAnB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,sGAEpBR,GAAa,GAFO,UAGGS,EAAAA,EAAAA,IAAkBJ,GAHrB,gBAGZK,EAHY,EAGZA,KACRZ,EAAWY,EAAKC,SACXD,EAAKC,QAAQC,QAChBR,GAAc,GANI,kDASpBF,EAAS,KAAMW,SATK,yBAWpBb,GAAa,GAXO,6EAAH,qDAerBQ,GACD,GAAE,CAACH,KAGF,gCACGN,IAAa,SAAC,IAAD,IACbE,IAAS,yEAAuCA,MAC/CE,IAAc,qEAEhB,wBACGN,EAAQiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,oCAAYD,MACZ,uBAAIC,MAFGF,EADE,QASpB,C,mMC9CDG,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,oGACdF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD3B,cAC3BT,EAD2B,yBAG1BA,GAH0B,2CAAH,qDAMnBW,EAAmB,mCAAG,WAAMC,GAAN,uFACdJ,EAAAA,EAAAA,IAAA,gCACQC,EADR,kBACyBG,IAFX,cAC3BZ,EAD2B,yBAK1BA,GAL0B,2CAAH,sDAQnBa,EAAc,mCAAG,WAAMR,GAAN,uFACTG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,oBAAkCI,IADzB,cACtBT,EADsB,yBAGrBA,GAHqB,2CAAH,sDAMdc,EAAc,mCAAG,WAAMT,GAAN,uFACTG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,4BAA0CI,IADjC,cACtBT,EADsB,yBAGrBA,GAHqB,2CAAH,sDAMdD,EAAiB,mCAAG,WAAMM,GAAN,uFACZG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,4BAA0CI,IAD9B,cACzBT,EADyB,yBAGxBA,GAHwB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [hasReviews, setHasReviews] = useState(true);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      try {\n        setIsLoading(true);\n        const { data } = await fetchMovieReviews(movieId);\n        setReviews(data.results);\n        if (!data.results.length) {\n          setHasReviews(false);\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Ooooops... something went wrong ðŸ˜¥ {error}</p>}\n      {!hasReviews && <p>We don't have any reviews for this movie</p>}\n\n      <ul>\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <p>Author: {author}</p>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6b54f8bf57e01fb03b792219232215b2';\n\nexport const fetchTrendingMovies = async () => {\n  const data = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const fetchSerchingMovies = async query => {\n  const data = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieInfo = async id => {\n  const data = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const data = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const data = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n\n  return data;\n};\n"],"names":["useState","reviews","setReviews","isLoading","setIsLoading","error","setError","hasReviews","setHasReviews","movieId","useParams","useEffect","getMovieReviews","fetchMovieReviews","data","results","length","message","map","id","author","content","axios","API_KEY","fetchTrendingMovies","fetchSerchingMovies","query","fetchMovieInfo","fetchMovieCast"],"sourceRoot":""}