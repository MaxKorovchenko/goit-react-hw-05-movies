{"version":3,"file":"static/js/169.9ddf39cf.chunk.js","mappings":"oKAGMA,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAMG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,UACE,uBAAII,OAFCD,EADA,KAShB,EAED,MAEAL,EAAWU,aAAe,CACxBC,KAAM,G,+ICUR,EA1BuB,WACrB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,gHAECC,EAAAA,EAAAA,MAFD,gBAEdC,EAFc,EAEdA,KACRN,EAAUM,EAAKC,SAHO,gDAKtBL,EAAS,KAAMM,SALO,yDAAH,qDASvBJ,GACD,GAAE,KAGD,6BACE,2CACCH,IAAS,yEAAuCA,MACjD,SAACf,EAAA,EAAD,CAAYC,MAAOY,MAGxB,ECpBD,EARa,WACX,OACE,2BACE,SAAC,EAAD,KAGL,C,+LCNDU,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHL,EAAmB,mCAAG,oGACdI,EAAAA,EAAAA,IAAA,sCAAyCC,IAD3B,cAC3BJ,EAD2B,yBAG1BA,GAH0B,2CAAH,qDAMnBK,EAAmB,mCAAG,WAAMC,GAAN,uFACdH,EAAAA,EAAAA,IAAA,gCACQC,EADR,kBACyBE,IAFX,cAC3BN,EAD2B,yBAK1BA,GAL0B,2CAAH,sDAQnBO,EAAc,mCAAG,WAAMtB,GAAN,uFACTkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,oBAAkCmB,IADzB,cACtBJ,EADsB,yBAGrBA,GAHqB,2CAAH,sDAMdQ,EAAc,mCAAG,WAAMvB,GAAN,uFACTkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,4BAA0CmB,IADjC,cACtBJ,EADsB,yBAGrBA,GAHqB,2CAAH,sDAMdS,EAAiB,mCAAG,WAAMxB,GAAN,uFACZkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,4BAA0CmB,IAD9B,cACzBJ,EADyB,yBAGxBA,GAHwB,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","components/TrendingMovies/TrendingMovies.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {items.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <p>{title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.defaultProps = {\n  list: [],\n};\n\nMoviesList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import { useEffect, useState } from 'react';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nimport { fetchTrendingMovies } from 'services/api';\n\nconst TrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getTrendingMovies = async () => {\n      try {\n        const { data } = await fetchTrendingMovies();\n        setMovies(data.results);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    getTrendingMovies();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {error && <p>Ooooops... something went wrong ðŸ˜¥ {error}</p>}\n      <MoviesList items={movies} />\n    </main>\n  );\n};\n\nexport default TrendingMovies;\n","import TrendingMovies from 'components/TrendingMovies/TrendingMovies';\n\nconst Home = () => {\n  return (\n    <main>\n      <TrendingMovies />\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6b54f8bf57e01fb03b792219232215b2';\n\nexport const fetchTrendingMovies = async () => {\n  const data = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const fetchSerchingMovies = async query => {\n  const data = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieInfo = async id => {\n  const data = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const data = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const data = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n\n  return data;\n};\n"],"names":["MoviesList","items","location","useLocation","map","id","title","to","state","from","defaultProps","list","useState","movies","setMovies","error","setError","useEffect","getTrendingMovies","fetchTrendingMovies","data","results","message","axios","API_KEY","fetchSerchingMovies","query","fetchMovieInfo","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}